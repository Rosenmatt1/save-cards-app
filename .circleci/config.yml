version: 2.1

aliases:
  - &yarn-install |
    yarn install --non-interactive --frozen-lockfile --cache-folder ~/.cache/yarn

  - &restore-yarn-cache
    keys:
      - yarn-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    paths:
      - ~/.cache/yarn
    key: yarn-{{ checksum "yarn.lock" }}

  - &restore-pip-cache
    keys:
      - pip-{{ checksum "server/poetry.lock" }}

  - &save-pip-cache
    paths:
      - server/.venv
    key: pip-{{ checksum "server/poetry.lock" }}

  - &persist-js-to-workspace
    root: .
    paths:
      - node_modules
      - __generated__
      - src

  - &persist-python-to-workspace
    root: .
    paths:
      - server/.venv
      - .env

  - &attach-workspace
    at: .

  - &python-env
    CELERY_TASK_ALWAYS_EAGER: true
    DATABASE_URL: postgresql://postgres@localhost/uplifty?sslmode=disable
    SECRET_KEY: s3cr3t

  - &postgres-env
    POSTGRES_USER: postgres
    POSTGRES_DB: uplifty

executors:
  default_executor:
    docker:
      - image: circleci/node:12

  python_executor:
    docker:
      - image: circleci/python:3.8.5
        environment: *python-env
      - image: circleci/postgres:11.2
        environment: *postgres-env

jobs:
  yarn-install:
    executor: default_executor
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - attach_workspace: *attach-workspace
      - run: *yarn-install
      - save_cache: *save-yarn-cache
      - persist_to_workspace: *persist-js-to-workspace

  jest:
    executor: default_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run: yarn run jest

  eslint:
    executor: default_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run: yarn run eslint

  prettier:
    executor: default_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run: yarn run prettier:check

  audit:
    executor: default_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run: yarn audit

  build:
    executor: default_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run: yarn run build
      - run: yarn run analyze
      - run:
          name: upload report
          command: |
            mkdir -p /tmp/artifacts
            cp report.html /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  poetry:
    executor: python_executor
    steps:
      - checkout
      - run:
          name: add empty env file
          command: echo "" >> .env
      - restore_cache: *restore-pip-cache
      - run:
          name: install poetry
          command: |
            sudo pip install poetry
            cd server/
            poetry install
      - save_cache: *save-pip-cache
      - persist_to_workspace: *persist-python-to-workspace

  pytest:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run django tests
          command: |
            cd server/
            poetry run pytest

  black:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run black
          command: |
            cd server/
            poetry run black --check .

  isort:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run isort
          command: |
            cd server/
            poetry run isort --check-only -rc {{cookiecutter.project_slug}} tests

  flake8:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run flake8
          command: |
            cd server/
            poetry run flake8

  pylama:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run pylama
          command: |
            cd server/
            poetry run pylama server/

  python-security-check:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run safety check
          command: |
            cd server/
            poetry run safety check
      - run:
          name: run bandit
          command: |
            cd server/
            poetry run bandit -r server/

  migrations:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: run migrations
          command: |
            cd server/
            poetry run python manage.py migrate

  makemigrations-check:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: check makemigrations is up to date
          command: |
            cd server/
            poetry run python manage.py makemigrations --check

  schema:
    executor: python_executor
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: generate introspection schema
          command: |
            cd server/
            poetry run python manage.py graphql_schema --schema uplifty.schema.schema --out ./schema.json
      - run:
          name: check no changes to schema.json
          command: |
            if [[ `git status --porcelain server/schema.json` ]]; then
              git status --porcelain server/schema.json
              echo "Found changes to schema.json. Please check them in."
              exit 1
            fi
workflows:
  version: 2
  frontend:
    jobs:
      - yarn-install
      - jest:
          requires:
            - yarn-install
      - eslint:
          requires:
            - yarn-install
      - prettier:
          requires:
            - yarn-install
      - audit:
          requires:
            - yarn-install
      - build:
          requires:
            - yarn-install
  backend:
    jobs:
      - poetry
      - pytest:
          requires:
            - poetry
      - python-security-check:
          requires:
            - poetry
      - black:
          requires:
            - poetry
      - flake8:
          requires:
            - poetry
      - pylama:
          requires:
            - poetry
      - isort:
          requires:
            - poetry
      - migrations:
          requires:
            - poetry
      - makemigrations-check:
          requires:
            - migrations
      - schema:
          requires:
            - poetry
